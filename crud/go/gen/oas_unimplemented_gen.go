// Code generated by ogen, DO NOT EDIT.

package gen

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// EntityMappingsGet implements GET /entity_mappings operation.
//
// Returns a mappings of loaded entities.
//
// GET /entity_mappings
func (UnimplementedHandler) EntityMappingsGet(ctx context.Context) (r []EntityMapping, _ error) {
	return r, ht.ErrNotImplemented
}

// EntityNameGet implements GET /entity/{name} operation.
//
// Retrieves records with pagination.
//
// GET /entity/{name}
func (UnimplementedHandler) EntityNameGet(ctx context.Context, params EntityNameGetParams) (r *EntitiesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// EntityNameIDDelete implements DELETE /entity/{name}/{id} operation.
//
// Deletes record.
//
// DELETE /entity/{name}/{id}
func (UnimplementedHandler) EntityNameIDDelete(ctx context.Context, req *Entity, params EntityNameIDDeleteParams) error {
	return ht.ErrNotImplemented
}

// EntityNameIDGet implements GET /entity/{name}/{id} operation.
//
// Retrieves one record by identifier.
//
// GET /entity/{name}/{id}
func (UnimplementedHandler) EntityNameIDGet(ctx context.Context, params EntityNameIDGetParams) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// EntityNameIDPut implements PUT /entity/{name}/{id} operation.
//
// Updates existing record.
//
// PUT /entity/{name}/{id}
func (UnimplementedHandler) EntityNameIDPut(ctx context.Context, req *Entity, params EntityNameIDPutParams) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// EntityNamePost implements POST /entity/{name} operation.
//
// Creates record.
//
// POST /entity/{name}
func (UnimplementedHandler) EntityNamePost(ctx context.Context, req *Entity, params EntityNamePostParams) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
