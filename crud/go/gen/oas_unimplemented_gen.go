// Code generated by ogen, DO NOT EDIT.

package gen

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CreateRecord implements CreateRecord operation.
//
// Creates record.
//
// POST /entity/{name}
func (UnimplementedHandler) CreateRecord(ctx context.Context, req *Entity, params CreateRecordParams) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteRecordById implements DeleteRecordById operation.
//
// Deletes record.
//
// DELETE /entity/{name}/{id}
func (UnimplementedHandler) DeleteRecordById(ctx context.Context, req *Entity, params DeleteRecordByIdParams) error {
	return ht.ErrNotImplemented
}

// GetEntityMappings implements GetEntityMappings operation.
//
// Returns a mappings of loaded entities.
//
// GET /entity_mappings
func (UnimplementedHandler) GetEntityMappings(ctx context.Context) (r []EntityMapping, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRecordById implements GetRecordById operation.
//
// Retrieves one record by identifier.
//
// GET /entity/{name}/{id}
func (UnimplementedHandler) GetRecordById(ctx context.Context, params GetRecordByIdParams) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRecords implements GetRecords operation.
//
// Retrieves records with pagination.
//
// GET /entity/{name}
func (UnimplementedHandler) GetRecords(ctx context.Context, params GetRecordsParams) (r *EntitiesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateRecordById implements UpdateRecordById operation.
//
// Updates existing record.
//
// PUT /entity/{name}/{id}
func (UnimplementedHandler) UpdateRecordById(ctx context.Context, req *Entity, params UpdateRecordByIdParams) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
